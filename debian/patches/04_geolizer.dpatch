#! /bin/sh /usr/share/dpatch/dpatch-run
## 04_geolizer.dpatch by Jose Carlos Medeiros <debian@psabs.com.br>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Add support to Geolizer

###########
# http://www.isthe.com/chongo/src/webalizer-patch/

# 3.geolizer.patch

##################
# If AND ONLY IF you use one the MaxMind (http://www.maxmind.com/) GeoIP
# databases, then apply this patch.
#
# This patch, on Un*x / Linux / GNU-Linux systems performs the same as the
# geolizer.patch file in geolizer_2.01-10-patch.20021107.tar.gz
# line adjusted to deal with the previous 0.basic.patch, 1.64bit.patch,
# and 2.hist.patch patches.
#
# When I apply this patch, I configure and build as follows:
#
#	cd webalizer-2.01-10
#	./configure --with-gdlib --enable-geoip
#	make all
#
# The important part is to add --enable-geoip to the configure line.
##################

##################
# NOTE: This is an optional patch to be used If AND ONLY IF you use one
#	the MaxMind (http://www.maxmind.com/) GeoIP databases.
#
# Apply this patch after you have applied 2.hist.patch
##################

# Copyright (c) 2004 by Landon Curt Noll.  All Rights Reserved.
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted,
# provided that the above copyright, this permission notice and text
# this comment, and the disclaimer below appear in all of the following:
#
#       supporting documentation
#       source copies of this patch file
#
# LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
# EVENT SHALL LANDON CURT NOLL BE LIABLE FOR ANY SPECIAL, INDIRECT OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
# USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# chongo (Landon Curt Noll, http://www.isthe.com/chongo/index.html) /\oo/\
#
# Share and enjoy! :-)

# PLEASE NOTE:
#
#	I do not support nor did I write webalizer, I just use it.
#	These patches are offered to you in the hopes that you
#	will find them useful and in the hopes that they might
#	make it into a webalizer release someday.



@DPATCH@
diff -urNad webalizer-2.01.10~/Makefile.std webalizer-2.01.10/Makefile.std
--- webalizer-2.01.10~/Makefile.std	2000-10-17 02:15:53.000000000 -0200
+++ webalizer-2.01.10/Makefile.std	2006-05-24 18:21:56.000000000 -0300
@@ -41,6 +41,10 @@
 # Some might need this instead (Solaris?!?)
 #LIBS   = -lgd -lpng -lz -lm -ldb -lnsl -lsocket

+# Now, if you want to use GeoIP feature... Uncoment this:
+#DEFS   = -DUSE_GEOIP -DETCDIR=\"${ETCDIR}\"
+#LIBS   = -lgd -lpng -lz -lm -lGeoIP
+
 # If your GD lib was compiled with X/truetype, use this
 # or some variation of it:

diff -urNad webalizer-2.01.10~/README.FIRST webalizer-2.01.10/README.FIRST
--- webalizer-2.01.10~/README.FIRST	2006-05-24 18:21:55.000000000 -0300
+++ webalizer-2.01.10/README.FIRST	2006-05-24 18:22:59.000000000 -0300
@@ -338,5 +338,23 @@
 # for an example if what an extended history looks like.
 ##################

+###################  SUMMARY 04_geolizer  ##########################

+##################
+# If AND ONLY IF you use one the MaxMind (http://www.maxmind.com/) GeoIP
+# databases, then apply this patch.
+#
+# This patch, on Un*x / Linux / GNU-Linux systems performs the same as the
+# geolizer.patch file in geolizer_2.01-10-patch.20021107.tar.gz
+# line adjusted to deal with the previous 0.basic.patch, 1.64bit.patch,
+# and 2.hist.patch patches.
+#
+# When I apply this patch, I configure and build as follows:
+#
+#      cd webalizer-2.01-10
+#      ./configure --with-gdlib --enable-geoip
+#      make all
+#
+# The important part is to add --enable-geoip to the configure line.
+##################

diff -urNad webalizer-2.01.10~/configure.in webalizer-2.01.10/configure.in
--- webalizer-2.01.10~/configure.in	2000-10-06 04:51:49.000000000 -0300
+++ webalizer-2.01.10/configure.in	2006-05-24 18:21:56.000000000 -0300
@@ -62,10 +62,20 @@
 AC_ARG_WITH(dblib,--with-dblib=DIR          Alternate location for db library,
 LDFLAGS="-L${withval} ${LDFLAGS}"; HAVE_DB="yes", HAVE_DB="")

+AC_ARG_WITH(geoip-inc,--with-geoip-inc=DIR      Alternate location for GeoIP headers,
+EXTRA_GEOIPINC="${withval}")
+
+AC_ARG_WITH(geoip-lib,--with-geoip-lib=DIR      Alternate location for GeoIP library,
+EXTRA_GEOIPLIB="${withval}")
+
 dnl enable-dns forces use of DNS code
 AC_ARG_ENABLE(dns,--enable-dns              Enable DNS lookup code,
 USE_DNS="yes")

+dnl enable-geoip forces use of GeoIP library
+AC_ARG_ENABLE(geoip,--enable-geoip            Enable GeoIP country lookup,
+USE_GEOIP="yes")
+
 dnl DNS library check
 if test "$USE_DNS" = "yes"; then
   if test "$HAVE_DB" = ""; then
@@ -146,6 +156,32 @@
  AC_MSG_ERROR(gd headers not found... please install gd.)
 fi

+dnl Check GeoIP if user wants it
+if test "$USE_GEOIP" = "yes"; then
+ dnl Check for GeoIP headers
+ AC_FIND_PATH(GEOIPINC,GeoIP.h,"", ${PREFIX}/include /usr/local/include /usr/include /include ${prefix}/include ./ ${EXTRA_GEOIPINC})
+ if test "$GEOIPINC" = ""; then
+  AC_MSG_ERROR(GeoIP headers not found... please install GeoIP.)
+ else
+  CFLAGS="-I${GEOIPINC} ${CFLAGS}"
+ fi
+
+ dnl Check for GeoIP library
+ AC_FIND_PATH(GEOIPLIB,libGeoIP.a,"", ${PREFIX}/lib /usr/local/lib /usr/lib /lib ${prefix}/lib ./ ${EXTRA_GEOIPLIB})
+ if test "$GEOIPLIB" = ""; then
+  AC_MSG_ERROR(GeoIP library not found... please install GeoIP.)
+ else
+  LDFLAGS="-L${GEOIPLIB} ${LDFLAGS}"
+ fi
+
+ AC_CHECK_LIB(GeoIP, GeoIP_new, LIBS="-lGeoIP ${LIBS}", LIBGEOIP="no")
+  if test "$LIBGEOIP" = "no"; then
+   AC_MSG_ERROR(GeoIP library not functional... please install GeoIP.)
+  else
+   OPTS="-DUSE_GEOIP ${OPTS}"
+  fi
+fi
+
 dnl additonal platform specific checks
 AC_CHECK_HEADERS(getopt.h)
 if test "$HAVE_LIBM" = "1"; then
diff -urNad webalizer-2.01.10~/output.c webalizer-2.01.10/output.c
--- webalizer-2.01.10~/output.c	2006-05-24 18:21:55.000000000 -0300
+++ webalizer-2.01.10/output.c	2006-05-24 18:21:56.000000000 -0300
@@ -59,6 +59,12 @@
 #define CLK_TCK _SC_CLK_TCK
 #endif

+/* GeoIP stuff */
+#ifdef USE_GEOIP
+#include <GeoIP.h>
+extern GeoIP *gi;
+#endif	/* USE_GEOIP */
+
 #include "webalizer.h"                        /* main header              */
 #include "lang.h"
 #include "hashtab.h"
@@ -1922,7 +1928,7 @@
    int ctry_fnd;
    u_int64_t idx;
    HNODEPTR hptr;
-   char *domain;
+   char *domain, *country = NULL;
    u_int64_t pie_data[10];
    char   *pie_legend[10];
    char   pie_title[48];
@@ -1930,6 +1936,12 @@

    extern int ctry_graph;  /* include external flag */

+#ifdef USE_GEOIP
+   const char *result;
+   char code[3];
+   code[2]='\0';
+#endif	/* USE_GEOIP */
+
    /* scan hash table adding up domain totals */
    for (i=0;i<MAXHASH;i++)
    {
@@ -1940,16 +1952,40 @@
          {
             domain = hptr->string+strlen(hptr->string)-1;
             while ( (*domain!='.')&&(domain!=hptr->string)) domain--;
-            if ((domain==hptr->string)||(isdigit((int)*++domain)))
-            {
-               ctry[0].count+=hptr->count;
-               ctry[0].files+=hptr->files;
-               ctry[0].xfer +=hptr->xfer;
-            }
-            else
+            if (domain==hptr->string)
+	       country=NULL;
+            else if (isdigit((int)*++domain))
             {
-               ctry_fnd=0;
-               idx=ctry_idx(domain);
+#ifdef USE_GEOIP
+               if (use_geoip)
+	       {
+                  result = GeoIP_country_code_by_addr(gi, hptr->string);
+                  if ((result == NULL)||((result[0]=='-')&&(result[1]=='-')))
+		     country=NULL;
+		  else
+	          {
+	             code[0]=tolower(result[0]);
+	             code[1]=tolower(result[1]);
+
+		     country=code;
+	          }
+	       }
+	       else
+	          country=NULL;
+
+#else
+	       country=NULL;
+#endif	/* USE_GEOIP */
+	    }
+	    else
+	    {
+	       country=domain;
+	    }
+
+            ctry_fnd=0;
+	    if (country!=NULL)
+	    {
+               idx=ctry_idx(country);
                for (j=0;ctry[j].desc;j++)
                {
                   if (idx==ctry[j].idx)
@@ -1961,12 +1997,19 @@
                      break;
                   }
                }
-               if (!ctry_fnd)
-               {
-                  ctry[0].count+=hptr->count;
-                  ctry[0].files+=hptr->files;
-                  ctry[0].xfer +=hptr->xfer;
-               }
+	    }
+	    if ((!ctry_fnd)||(country==NULL))
+            {
+#ifdef USE_GEOIP
+	       if (use_geoip && debug_mode)
+	          fprintf(stderr, "--> unresolved country for '%s' (GeoIP says %s:%s)\n",
+			  hptr->string,
+			  GeoIP_country_code_by_addr(gi, hptr->string),
+			  GeoIP_country_name_by_addr(gi, hptr->string));
+#endif	/* USE_GEOIP */
+    	       ctry[0].count+=hptr->count;
+    	       ctry[0].files+=hptr->files;
+    	       ctry[0].xfer +=hptr->xfer;
             }
          }
          hptr=hptr->next;
diff -urNad webalizer-2.01.10~/sample.conf webalizer-2.01.10/sample.conf
--- webalizer-2.01.10~/sample.conf	2000-09-29 00:51:42.000000000 -0300
+++ webalizer-2.01.10/sample.conf	2006-05-24 18:21:56.000000000 -0300
@@ -568,4 +568,12 @@
 #DumpUsers	no
 #DumpSearchStr  no

+# If you compiled Webalizer with GeoIP library, it becomes enabled
+# by default. But if you wish to disable it, just set GeoIP to 'no'.
+# You may also want to specify database file path manually, if you
+# don't have one installed on system (in case of static build).
+
+#GeoIP		yes
+#GeoIPDatabase	/usr/share/GeoIP/GeoIP.dat
+
 # End of configuration file...  Have a nice day!
diff -urNad webalizer-2.01.10~/webalizer.c webalizer-2.01.10/webalizer.c
--- webalizer-2.01.10~/webalizer.c	2006-05-24 18:21:55.000000000 -0300
+++ webalizer-2.01.10/webalizer.c	2006-05-24 18:21:56.000000000 -0300
@@ -71,6 +71,11 @@
 #endif  /* HAVE_DB_185_H */
 #endif  /* USE_DNS */

+#ifdef USE_GEOIP
+#include <GeoIP.h>
+#define GEOIP_FLAGS GEOIP_MEMORY_CACHE
+#endif	/* USE_GEOIP */
+
 #include "webalizer.h"                         /* main header              */
 #include "output.h"
 #include "parser.h"
@@ -102,7 +107,7 @@

 char    *version     = "2.01";                /* program version          */
 char    *editlvl     = "10";                  /* edit level               */
-char    *moddate     = "16-Apr-2002";         /* modification date        */
+char    *moddate     = "26-Aug-2002";         /* modification date        */
 char    *copyright   = "Copyright 1997-2001 by Bradford L. Barrett";

 int     verbose      = 2;                     /* 2=verbose,1=err, 0=none  */
@@ -139,6 +144,12 @@
 char    *dns_cache   = NULL;                  /* DNS cache file name      */
 int     dns_children = 0;                     /* DNS children (0=don't do)*/

+#ifdef USE_GEOIP
+int     use_geoip    = 1;                     /* Use GeoIP library        */
+char    *geoip_dbase = NULL;                  /* Use specific GeoIP dbase */
+GeoIP	*gi          = NULL;                  /* GeoIP handle             */
+#endif	/* USE_GEOIP */
+
 int     ntop_sites   = 30;                    /* top n sites to display   */
 int     ntop_sitesK  = 10;                    /* top n sites (by kbytes)  */
 int     ntop_urls    = 30;                    /* top n url's to display   */
@@ -209,7 +220,7 @@

 time_t  now;                                  /* used by cur_time funct   */
 struct  tm *tp;                               /* to generate timestamp    */
-char    timestamp[32];                        /* for the reports          */
+char    timestamp[64];                        /* for the reports          */

 gzFile  gzlog_fp;                             /* gzip logfile pointer     */
 FILE    *log_fp;                              /* regular logfile pointer  */
@@ -263,16 +274,22 @@
    /* add default index. alias */
    add_nlist("index.",&index_alias);

+#ifndef WIN32
    sprintf(tmp_buf,"%s/webalizer.conf",ETCDIR);
    /* check for default config file */
    if (!access("webalizer.conf",F_OK))
       get_config("webalizer.conf");
    else if (!access(tmp_buf,F_OK))
       get_config(tmp_buf);
+#endif	/* WIN32 */

    /* get command line options */
    opterr = 0;     /* disable parser errors */
+#ifndef USE_GEOIP
    while ((i=getopt(argc,argv,"a:A:c:C:dD:e:E:fF:g:GhHiI:l:Lm:M:n:N:o:pP:qQr:R:s:S:t:Tu:U:vVx:XY"))!=EOF)
+#else
+   while ((i=getopt(argc,argv,"a:A:c:C:dD:e:E:fF:g:GhHiI:l:Lm:M:n:N:o:pP:qQr:R:s:S:t:Tu:U:vVwW:x:XY"))!=EOF)
+#endif	/* USE_GEOIP */
    {
       switch (i)
       {
@@ -315,6 +332,10 @@
         case 'U': ntop_urls=atoi(optarg);    break;  /* Top urls            */
         case 'v':
         case 'V': print_version();           break;  /* Version             */
+#ifdef USE_GEOIP
+        case 'w': use_geoip=0;               break;  /* Disable GeoIP       */
+        case 'W': geoip_dbase=optarg;        break;  /* Use GeoIP database  */
+#endif	/* USE_GEOIP */
         case 'x': html_ext=optarg;           break;  /* HTML file extension */
         case 'X': hide_sites=1;              break;  /* Hide ind. sites     */
         case 'Y': ctry_graph=0;              break;  /* Supress ctry graph  */
@@ -443,6 +464,27 @@
       }
    }

+#ifdef USE_GEOIP
+   /* Open GeoIP database */
+   if (use_geoip)
+   {
+      if (geoip_dbase!=NULL)
+      {
+         if (verbose>1) printf("Using GeoIP database %s\n", geoip_dbase);
+         gi=GeoIP_open(geoip_dbase, GEOIP_FLAGS);
+      }
+      else
+      {
+         if (verbose>1) printf("Using default GeoIP database\n");
+         gi=GeoIP_new(GEOIP_FLAGS);
+      }
+
+      /* GeoIP already prints error (in English!) */
+      if (gi==NULL)
+         exit(1);
+   }
+#endif	/* USE_GEOIP */
+
    /* switch directories if needed */
    if (out_dir)
    {
@@ -1345,6 +1387,10 @@
       if (dns_db) close_cache();
 #endif

+#ifdef USE_GEOIP
+      if (gi) GeoIP_delete(gi);
+#endif	/* USE_GEOIP */
+
       /* Whew, all done! Exit with completion status (0) */
       exit(0);
    }
@@ -1449,7 +1495,11 @@
                      "DNSCache",          /* DNS Cache file name        84  */
                      "DNSChildren",       /* DNS Children (0=no DNS)    85  */
                      "DailyGraph",        /* Daily Graph (0=no)         86  */
-                     "DailyStats"         /* Daily Stats (0=no)         87  */
+                     "DailyStats",        /* Daily Stats (0=no)         87  */
+#ifdef USE_GEOIP
+                     "GeoIP",             /* Use GeoIP library (0=no)   88  */
+                     "GeoIPDatabase",     /* GeoIP database             89  */
+#endif	/* USE_GEOIP */
                    };

    FILE *fp;
@@ -1593,6 +1643,10 @@
 #endif  /* USE_DNS */
         case 86: daily_graph=(value[0]=='n')?0:1; break;  /* HourlyGraph    */
         case 87: daily_stats=(value[0]=='n')?0:1; break;  /* HourlyStats    */
+#ifdef USE_GEOIP
+        case 88: use_geoip=(value[0]=='n')?0:1; break;    /* GeoIP          */
+        case 89: geoip_dbase=save_opt(value); break;      /* GeoIPDatabase  */
+#endif	/* USE_GEOIP */
       }
    }
    fclose(fp);
@@ -1684,10 +1738,20 @@
     printf("Mod date: %s  Options: ",moddate);
 #ifdef USE_DNS
     printf("DNS ");
-#else
+#endif
+#ifdef USE_GEOIP
+    printf("GeoIP ");
+#endif	/* USE_GEOIP */
+
+#if !((defined(USE_DNS)) || (defined(USE_GEOIP)))
     printf("none");
 #endif
+
+#ifndef WIN32
     printf("\nDefault config dir: %s\n\n",ETCDIR);
+#else
+    printf("\nNo default config dir (Win32 Build)\n\n");
+#endif	/* WIN32 */
  }
  else printf("\n");
  exit(1);
diff -urNad webalizer-2.01.10~/webalizer.h webalizer-2.01.10/webalizer.h
--- webalizer-2.01.10~/webalizer.h	2006-05-24 18:21:55.000000000 -0300
+++ webalizer-2.01.10/webalizer.h	2006-05-24 18:21:56.000000000 -0300
@@ -123,6 +123,10 @@
 #endif  /* INADDR_NONE */
 #endif

+#ifdef WIN32
+#include <windows.h>
+#endif
+
 /* Response code structure */
 struct response_code {     char    *desc;         /* response code struct  */
                          u_int64_t    count; };
@@ -191,6 +195,11 @@
 extern char    *dns_cache   ;                 /* DNS cache file name      */
 extern int     dns_children ;                 /* # of DNS children        */

+#ifdef USE_GEOIP
+extern int     use_geoip    ;                 /* Use GeoIP library        */
+extern char    *geoip_dbase ;                 /* Use specific GeoIP dbase */
+#endif
+
 extern int     ntop_sites   ;                 /* top n sites to display   */
 extern int     ntop_sitesK  ;                 /* top n sites (by kbytes)  */
 extern int     ntop_urls    ;                 /* top n url's to display   */
