#! /bin/sh /usr/share/dpatch/dpatch-run
## 18_ttf_support_throught_libgd.dpatch by Jose Carlos Medeiros <debian@psabs.com.br>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: make possible to use TrueTypeFont throught libgd

####################
# graph label characters will be broken under non-C locale
# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=201723
# From: Tatsuki Sugiura <sugi@nemui.org>
#
# GD's built-in font has no Japanese Kanji and any other multi-byte
# characters. Graph labels can't be displayed correctly under some
# locales which has these characters.
# This patch make possible to use TrueTypeFont throught libgd
# function.

@DPATCH@
diff -urNad webalizer-2.01.10~/README.FIRST webalizer-2.01.10/README.FIRST
--- webalizer-2.01.10~/README.FIRST	2006-06-28 17:39:10.000000000 -0300
+++ webalizer-2.01.10/README.FIRST	2006-06-28 17:54:45.000000000 -0300
@@ -460,3 +460,18 @@
 #   modifications included. Help is appreciated.
 ##################

+###################  SUMMARY 18_ttf_support_throught_libgd  ##########################
+
+##################
+# TrueTypeFont makes possible to replace GD built-in font by
+# specified TrueTypeFont.
+# The value can be '/path/to/your/true_type_font.file' or empty.
+# If value is empty(or commented out), GD built-in font will be used.
+# The default is empty.
+# (Supplement for Japanese:
+#  Under EUC-JP locale, TTF file must be specified which has *Windows
+#  Shift-JIS encoding*. This limitation is derived from libgd.
+#  e.g. you can use "/usr/share/fonts/truetype/X-TT/wadalab-gothic.ttf"
+#  provided by ttf-xtt-wadalab-gothic package)
+#TrueTypeFont
+##################
diff -urNad webalizer-2.01.10~/configure.in webalizer-2.01.10/configure.in
--- webalizer-2.01.10~/configure.in	2006-06-28 17:39:11.000000000 -0300
+++ webalizer-2.01.10/configure.in	2006-06-28 17:41:25.000000000 -0300
@@ -133,9 +133,14 @@
 if test "$EXTRA_GD" = ""; then
   if test "$EXTRA_GDLIB" = ""; then
    AC_CHECK_LIB(gd, gdImagePng,LIBS="-lgd ${LIBS}"; HAVE_LIBGD="yes", HAVE_LIBGD="")
+   AC_CHECK_LIB(gd, gdImageStringFT, LIBS="-lgd ${LIBS}"; HAVE_LIBGD_TTF="yes", HAVE_LIBGD_TTF="")
   fi
 fi

+if test "$HAVE_LIBGD_TTF" = "yes" ;then
+ AC_DEFINE(HAVE_LIBGD_TTF)
+fi
+
 if test "$HAVE_LIBGD" = ""; then
  AC_FIND_PATH(GDLOC,libgd.a,"", ${PREFIX}/lib ${PREFIX}/lib/gd /usr/local/lib /usr/local/lib/gd /usr/local/gd /usr/local/include /usr/local/include/gd /usr/lib/gd /usr/lib /lib ./ ./gd ../gd ${EXTRA_GDLIB} ${EXTRA_GD})
  if test "$GDLOC" = ""; then
diff -urNad webalizer-2.01.10~/graphs.c webalizer-2.01.10/graphs.c
--- webalizer-2.01.10~/graphs.c	2006-06-28 17:39:11.000000000 -0300
+++ webalizer-2.01.10/graphs.c	2006-06-28 17:45:02.000000000 -0300
@@ -83,6 +83,48 @@
                 file_or_blue, site_or_orange, hit_or_green,
		page_or_cyan, visit_or_yellow, blue;

+#ifdef HAVE_LIBGD_TTF
+/*
+ * Simple wrapper of gdImageString() for TrueType fonts
+ *
+ * To support Japanese (and other multi-byte characters), GD 1.7
+ * or later that supports kanji(JISX208) TTF has been required.
+ * So, we must use TrueType fonts instead of gd built-in
+ * bitmap fonts.
+ *
+ * Original of function written by <yasu@on.cs.keio.ac.jp>.
+ * And modified by Tatsuki Sugiura <sugi@nemui.org>
+ *
+ */
+static void gdImageStringWrapper(gdImagePtr im,  gdFontPtr f,
+				 int x, int y,
+				 unsigned char *s, int color, double rad)
+{
+   double ptsize = 11.0;
+   int    brect[8];
+   extern char *ttf_file;
+
+   if (ttf_file == NULL || strcmp(ttf_file, "") == 0) {
+      if (fabs(rad) < PI/4.0)
+        gdImageString(im, f, x, y, s, color);
+      else
+        gdImageStringUp(im, f, x, y, s, color);
+   } else {
+      if (f == gdFontSmall)
+         ptsize = 9.0;
+
+      gdImageStringFT(im, brect, color, ttf_file, ptsize, rad,
+                     x + (int)(ptsize*sin(rad)),
+                     y + (int)(ptsize*cos(rad)), s);
+   }
+}
+
+#define gdImageString(im, f, x, y, s, color) \
+        gdImageStringWrapper(im, f, x, y, s, color, 0.0)
+#define gdImageStringUp(im, f, x, y, s, color) \
+	gdImageStringWrapper(im, f, x, y, s, color, PI/2.0)
+#endif /* HAVE_LIBGD_TTF */
+
 /****************************************************************/
 /*                                                              */
 /* ASHEX2INT - ASCII HEXA TO INT CONVERTER [ not strtoul() ]    */
diff -urNad webalizer-2.01.10~/sample.conf webalizer-2.01.10/sample.conf
--- webalizer-2.01.10~/sample.conf	2006-06-28 17:39:11.000000000 -0300
+++ webalizer-2.01.10/sample.conf	2006-06-28 17:46:01.000000000 -0300
@@ -600,4 +600,17 @@
 #PieColor3	ff00ff
 #PieColor4	ffc480

+# TrueTypeFont makes possible to replace GD built-in font by
+# specified TrueTypeFont.
+# The value can be '/path/to/your/true_type_font.file' or empty.
+# If value is empty(or commented out), GD built-in font will be used.
+# The default is empty.
+# (Supplement for Japanese:
+#  Under EUC-JP locale, TTF file must be specified which has *Windows
+#  Shift-JIS encoding*. This limitation is derived from libgd.
+#  e.g. you can use "/usr/share/fonts/truetype/X-TT/wadalab-gothic.ttf"
+#  provided by ttf-xtt-wadalab-gothic package)
+
+#TrueTypeFont
+
 # End of configuration file...  Have a nice day!
diff -urNad webalizer-2.01.10~/webalizer.c webalizer-2.01.10/webalizer.c
--- webalizer-2.01.10~/webalizer.c	2006-06-28 17:39:11.000000000 -0300
+++ webalizer-2.01.10/webalizer.c	2006-06-28 17:50:29.000000000 -0300
@@ -153,6 +153,10 @@
 GeoIP	*gi          = NULL;                  /* GeoIP handle             */
 #endif	/* USE_GEOIP */

+#ifdef HAVE_LIBGD_TTF
+char    *ttf_file    = "";                    /* truetype font file       */
+#endif
+
 int     ntop_sites   = 30;                    /* top n sites to display   */
 int     ntop_sitesK  = 10;                    /* top n sites (by kbytes)  */
 int     ntop_urls    = 30;                    /* top n url's to display   */
@@ -1597,7 +1601,10 @@
                       "PieColor2",         /* Pie Color 2 (def=80ffc0)   97  */
                       "PieColor3",         /* Pie Color 3 (def=ff00ff)   98  */
                       "PieColor4",         /* Pie Color 4 (def=ffc480)   99  */
-		      "NoFollow"           /* Referrer Following (2=no)  100 */
+		      "NoFollow",          /* Referrer Following (2=no)  100 */
+#ifdef HAVE_LIBGD_TTF
+		      "TrueTypeFont"       /* TrueType Font file         101 */
+#endif
                    };

    FILE *fp;
@@ -1757,6 +1764,9 @@
          case 98: strncpy(pie_color3 +1,value,6);break;
          case 99: strncpy(pie_color4 +1,value,6);break;
          case 100: nofollow== atoi(value); break;         /* NoFollow       */
+#ifdef HAVE_LIBGD_TTF
+         case 101: ttf_file=save_opt(value);     break;   /* TrueType font  */
+#endif
       }
    }
    fclose(fp);
