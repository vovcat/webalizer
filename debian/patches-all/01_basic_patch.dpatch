#! /bin/sh /usr/share/dpatch/dpatch-run
## 01_basic_patch.dpatch by Jose Carlos Medeiros <debian@psabs.com.br>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: This patch makes basic changes in webalizer.

###########
# http://www.isthe.com/chongo/src/webalizer-patch/

# country-codes.txt

##################
# Some of the entries on the list are not countries.  In some cases the
# nation state status is contested.  In other cases the entry is related
# to a territory that does not claim to be a country.  In some cases
# what some claim is a country is in dispute by another country.  And
# things like .arpa are not a country.
#
# I recommend that one use the term 'location' instead of 'Nation' or
# 'Country' to avoid the whole mess.  ;-)
#
# Added are some missing locations (from the ISO UN codes and
# from GeoIP's list).  Some location names have been corrected
# or changed to their official name.  Added some more TLDs.
##################

# dns_resolv.h

##################
# Let the DNS cache exist for at least a month.  One could rebuild
# the DNS cache, for example, at the start of the month.  Daily
# runs would be less stressful as they would pick values out
# of the monthly cache.
##################

# output.c

##################
# Spammers and other low-life forms have been stuffing the
# "top N referrer" table in order to get webalizer to generate
# links to their sites ... (perhaps because they think this
# will improve their search engine placement or perhaps because
# they wish to direct people to a poisoned web page in an effort
# to exploit some browser bug?).  Whatever the reason, we don't
# need to give them their links.
#
# This patch turns the "top N referrer" table into just values
# instead of A tags.
##################

# webalizer.c

##################
# A number of Linux distributions need this change (because
# they do not ship with the DB compat headers and libs?).
#
# The POSIX time spec says that during a leap second, the seconds value
# may be 60.  And yes ... we had an entry that came in during a leap
# second that was rejected.  :-)
##################

# webalizer.h

##################
# The URL, referrer and search frequently are a bit longer than
# what the original code wanted to deal with.  A 256 char limit
# seems to catch most of the longer values.
##################


@DPATCH@
Index: webalizer-2.01.10-vc/DNS.README
===================================================================
--- webalizer-2.01.10-vc.orig/DNS.README	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/DNS.README	2006-10-27 12:34:31.000000000 +0400
@@ -157,6 +157,10 @@
 Considerations
 --------------

+If you use STDIN and need to do DNS lookups, then you MUST run the program
+twice (once to resolve, once to produce the report).  The reason is that you
+cannot 'rewind' a STDIN input stream.  This is discussed in the README file.
+
 Processing of live log files is discouraged, as the chances of log records
 being written between the time of DNS resolution and normal processing will
 cause problems.
Index: webalizer-2.01.10-vc/README.FIRST
===================================================================
--- webalizer-2.01.10-vc.orig/README.FIRST	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/README.FIRST	2006-10-27 12:34:31.000000000 +0400
@@ -190,3 +190,44 @@
 to have it work as expected (as in previous versions).  See the
 README file for additional information.

+###################  SUMMARY 01_basic_patch  ##########################
+
+# Allow webalizer on systems such as Linux to process very large log
+# files (such as >2GB in size).
+##################
+# Some of the entries on the list are not countries.  In some cases the
+# nation state status is contested.  In other cases the entry is related
+# to a territory that does not claim to be a country.  In some cases
+# what some claim is a country is in dispute by another country.  And
+# things like .arpa are not a country.
+#
+# I recommend that one use the term 'location' instead of 'Nation' or
+# 'Country' to avoid the whole mess.  ;-)
+#
+# Added are some missing locations (from the ISO UN codes and
+# from GeoIP's list).  Some location names have been corrected
+# or changed to their official name.  Added some more TLDs.
+##################
+# Spammers and other low-life forms have been stuffing the
+# "top N referrer" table in order to get webalizer to generate
+# links to their sites ... (perhaps because they think this
+# will improve their search engine placement or perhaps because
+# they wish to direct people to a poisoned web page in an effort
+# to exploit some browser bug?).  Whatever the reason, we don't
+# need to give them their links.
+#
+# This patch turns the "top N referrer" table into just values
+# instead of A tags.
+##################
+# A number of Linux distributions need this change (because
+# they do not ship with the DB compat headers and libs?).
+#
+# The POSIX time spec says that during a leap second, the seconds value
+# may be 60.  And yes ... we had an entry that came in during a leap
+# second that was rejected.  :-)
+##################
+# The URL, referrer and search frequently are a bit longer than
+# what the original code wanted to deal with.  A 256 char limit
+# seems to catch most of the longer values.
+##################
+
Index: webalizer-2.01.10-vc/country-codes.txt
===================================================================
--- webalizer-2.01.10-vc.orig/country-codes.txt	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/country-codes.txt	2006-10-27 12:34:31.000000000 +0400
@@ -1,7 +1,8 @@
+AC   Ascension Island
 AD   Andorra
 AE   United Arab Emirates
 AF   Afghanistan
-AG   Antigua and Barbuda
+AG   Antigua &amp; Barbuda
 AI   Anguilla
 AL   Albania
 AM   Armenia
@@ -14,7 +15,7 @@
 AU   Australia
 AW   Aruba
 AZ   Azerbaijan
-BA   Bosnia and Herzegovina
+BA   Bosnia &amp; Herzegovina
 BB   Barbados
 BD   Bangladesh
 BE   Belgium
@@ -35,10 +36,11 @@
 BZ   Belize
 CA   Canada
 CC   Cocos (Keeling) Islands
+CD   Congo, Dem. Rep. of the
 CF   Central African Republic
-CG   Congo
+CG   Congo, Republic of
 CH   Switzerland
-CI   Cote D'Ivoire (Ivory Coast)
+CI   Cote D'Ivoire
 CK   Cook Islands
 CL   Chile
 CM   Cameroon
@@ -67,7 +69,7 @@
 FI   Finland
 FJ   Fiji
 FK   Falkland Islands (Malvinas)
-FM   Micronesia
+FM   Micronesia, Fed. State of
 FO   Faroe Islands
 FR   France
 FX   France, Metropolitan
@@ -76,6 +78,7 @@
 GD   Grenada
 GE   Georgia
 GF   French Guiana
+GG   Guernsey
 GH   Ghana
 GI   Gibraltar
 GL   Greenland
@@ -84,13 +87,13 @@
 GP   Guadeloupe
 GQ   Equatorial Guinea
 GR   Greece
-GS   S. Georgia and S. Sandwich Isls.
+GS   S.Georgia &amp; S.Sandwich Isls.
 GT   Guatemala
 GU   Guam
 GW   Guinea-Bissau
 GY   Guyana
 HK   Hong Kong
-HM   Heard and McDonald Islands
+HM   Heard &amp; McDonald Islands
 HN   Honduras
 HR   Croatia (Hrvatska)
 HT   Haiti
@@ -98,12 +101,14 @@
 ID   Indonesia
 IE   Ireland
 IL   Israel
+IM   Isle of Man
 IN   India
-IO   British Indian Ocean Territory
+IO   British Indian Ocean Terr.
 IQ   Iraq
 IR   Iran
 IS   Iceland
 IT   Italy
+JE   Jersey
 JM   Jamaica
 JO   Jordan
 JP   Japan
@@ -112,12 +117,13 @@
 KH   Cambodia
 KI   Kiribati
 KM   Comoros
-KN   Saint Kitts and Nevis
+KN   Saint Kitts &amp; Nevis
 KP   Korea (North)
 KR   Korea (South)
 KW   Kuwait
 KY   Cayman Islands
 KZ   Kazakhstan
+LA   Lao People's Dem. Republic
 LA   Laos
 LB   Lebanon
 LC   Saint Lucia
@@ -128,15 +134,15 @@
 LT   Lithuania
 LU   Luxembourg
 LV   Latvia
-LY   Libya
+LY   Libyan Arab Jamahiriya
 MA   Morocco
 MC   Monaco
-MD   Moldova
+MD   Moldova, Republic of
 MG   Madagascar
 MH   Marshall Islands
-MK   Macedonia
+MK   Macedonia, Republic of
 ML   Mali
-MM   Myanmar
+MM   Burma (Myanmar)
 MN   Mongolia
 MO   Macau
 MP   Northern Mariana Islands
@@ -162,7 +168,7 @@
 NR   Nauru
 NT   Neutral Zone
 NU   Niue
-NZ   New Zealand (Aotearoa)
+NZ   New Zealand
 OM   Oman
 PA   Panama
 PE   Peru
@@ -171,38 +177,39 @@
 PH   Philippines
 PK   Pakistan
 PL   Poland
-PM   St. Pierre and Miquelon
-PN   Pitcairn
+PM   St. Pierre &amp; Miquelon
+PN   Pitcairn Island
 PR   Puerto Rico
+PS   Palestinian Territories
 PT   Portugal
 PW   Palau
 PY   Paraguay
 QA   Qatar
-RE   Reunion
+RE   Reunion Island
 RO   Romania
 RU   Russian Federation
 RW   Rwanda
 SA   Saudi Arabia
-Sb   Solomon Islands
+SB   Solomon Islands
 SC   Seychelles
 SD   Sudan
 SE   Sweden
 SG   Singapore
 SH   St. Helena
 SI   Slovenia
-SJ   Svalbard and Jan Mayen Islands
+SJ   Svalbard &amp; Jan Mayen Isls.
 SK   Slovak Republic
 SL   Sierra Leone
 SM   San Marino
 SN   Senegal
 SO   Somalia
 SR   Suriname
-ST   Sao Tome and Principe
+ST   Sao Tome &amp; Principe
 SU   USSR (former)
 SV   El Salvador
-SY   Syria
+SY   Syrian Arab Republic
 SZ   Swaziland
-TC   Turks and Caicos Islands
+TC   Turks &amp; Caicos Islands
 TD   Chad
 TF   French Southern Territories
 TG   Togo
@@ -214,7 +221,7 @@
 TO   Tonga
 TP   East Timor
 TR   Turkey
-TT   Trinidad and Tobago
+TT   Trinidad &amp; Tobago
 TV   Tuvalu
 TW   Taiwan
 TZ   Tanzania
@@ -225,14 +232,14 @@
 US   United States
 UY   Uruguay
 UZ   Uzbekistan
-VA   Vatican City State (Holy See)
-VC   Saint Vincent and the Grenadines
+VA   Holy See (Vatican City)
+VC   Saint Vincent &amp; the Grenadines
 VE   Venezuela
-VG   Virgin Islands (British)
-VI   Virgin Islands (U.S.)
-VN   Viet Nam
+VG   Virgin Islands (UK)
+VI   Virgin Islands (US)
+VN   Vietnam
 VU   Vanuatu
-WF   Wallis and Futuna Islands
+WF   Wallis &amp; Futuna Islands
 WS   Samoa
 YE   Yemen
 YT   Mayotte
@@ -241,12 +248,20 @@
 ZM   Zambia
 ZR   Zaire
 ZW   Zimbabwe
-COM   US Commercial
-EDU   US Educational
-GOV   US Government
-INT   International
-MIL   US Military
-NET   Network
-ORG   Non-Profit Organization
-ARPA   Old style Arpanet
-NATO   Nato field
+BIZ   Business (biz)
+COM   Commercial (com)
+EDU   Educational (edu)
+GOV   US Government (gov)
+INT   International (int)
+MIL   US Military (mil)
+NET   Network (net)
+ORG   Non-Profit Organization (org)
+PRO   Professional firm (pro)
+ARPA   Old style Arpanet (arpa)
+INFO   Information (info)
+NAME   Family name (name)
+NATO   Nato field (nato)
+A1   Anonymous Proxy
+A2   Satellite Provider
+AP   Asia/Pacific Region
+EU   Europe Region
Index: webalizer-2.01.10-vc/dns_resolv.h
===================================================================
--- webalizer-2.01.10-vc.orig/dns_resolv.h	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/dns_resolv.h	2006-10-27 12:34:31.000000000 +0400
@@ -33,7 +33,7 @@
 #define DNS_CHILD_RUNNING 0x2

 #define MAXCHILD          100         /* Maximum number of DNS children     */
-#define DNS_CACHE_TTL     86400*3     /* TTL of an Entry in the DNS cache   */
+#define DNS_CACHE_TTL     86400*32    /* TTL of an Entry in the DNS cache   */

 #endif  /* USE_DNS */
 #endif  /* _DNS_RESOLV_H */
Index: webalizer-2.01.10-vc/lang/webalizer_lang.english
===================================================================
--- webalizer-2.01.10-vc.orig/lang/webalizer_lang.english	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/lang/webalizer_lang.english	2006-10-27 12:34:31.000000000 +0400
@@ -88,7 +88,7 @@
 char *msg_nomem_ts= "Can't allocate enough memory, Top Sites disabled!";
 char *msg_nomem_tr= "Can't allocate enough memory, Top Referrers disabled!";
 char *msg_nomem_tu= "Can't allocate enough memory, Top URLs disabled!";
-char *msg_nomem_tc= "Can't allocate enough memory, Top Countries disabled!";
+char *msg_nomem_tc= "Can't allocate enough memory, Top Locations disabled!";
 char *msg_nomem_ta= "Can't allocate enough memory, Top User Agents disabled!";
 char *msg_nomem_tsr="Can't allocate enough memory, Top Search Strings disabled!";
 char *msg_nomem_ti= "Can't allocate enough memory, Top Usernames disabled!";
@@ -125,7 +125,7 @@
          "-p        = preserve state (incremental)"        ,
          "-q        = supress informational messages"      ,
          "-Q        = supress _ALL_ messages"              ,
-         "-Y        = supress country graph"               ,
+         "-Y        = supress location graph"              ,
          "-G        = supress hourly graph"                ,
          "-H        = supress hourly stats"                ,
          "-L        = supress color coded graph legends"   ,
@@ -144,7 +144,7 @@
          "-P name   = Page type extension 'name'"          ,
          "-I name   = Index alias 'name'"                  ,
          "-A num    = Display num top agents"              ,
-         "-C num    = Display num top countries"           ,
+         "-C num    = Display num top locations"           ,
          "-R num    = Display num top referrers"           ,
          "-S num    = Display num top sites"               ,
          "-U num    = Display num top URLs"                ,
@@ -199,7 +199,7 @@
 char *msg_h_url   = "URL";
 char *msg_h_agent = "User Agent";
 char *msg_h_ref   = "Referrer";
-char *msg_h_ctry  = "Country";
+char *msg_h_ctry  = "Location";
 char *msg_h_search= "Search String";
 char *msg_h_uname = "Username";

@@ -209,7 +209,7 @@
 char *msg_hlnk_u  = "URLs";
 char *msg_hlnk_s  = "Sites";
 char *msg_hlnk_a  = "Agents";
-char *msg_hlnk_c  = "Countries";
+char *msg_hlnk_c  = "Locations";
 char *msg_hlnk_r  = "Referrers";
 char *msg_hlnk_en = "Entry";
 char *msg_hlnk_ex = "Exit";
@@ -241,7 +241,7 @@
 char *msg_htot_hs = "Hourly Statistics for";

 /* country pie chart */
-char *msg_ctry_use= "Usage by Country for";
+char *msg_ctry_use= "Usage by Location for";

 /* top tables */
 /* Formatted as "Top xxx of xxx Total something" */
@@ -251,7 +251,7 @@
 char *msg_top_u   = "Total URLs";
 char *msg_top_r   = "Total Referrers";
 char *msg_top_a   = "Total User Agents";
-char *msg_top_c   = "Total Countries";
+char *msg_top_c   = "Total Locations";
 char *msg_top_en  = "Total Entry Pages";
 char *msg_top_ex  = "Total Exit Pages";
 char *msg_top_sr  = "Total Search Strings";
@@ -325,24 +325,32 @@

 struct  country_code ctry[] = {
 { 0,                      "Unresolved/Unknown",               0,0,0 },
-{ IDX_3C('c','o','m'),    "US Commercial",                    0,0,0 },
-{ IDX_3C('e','d','u'),    "US Educational",                   0,0,0 },
-{ IDX_3C('g','o','v'),    "US Government",                    0,0,0 },
+{ IDX_3C('b','i','z'),    "Business (biz)",                   0,0,0 },
+{ IDX_3C('c','o','m'),    "Commercial (com)",                 0,0,0 },
+{ IDX_3C('e','d','u'),    "Educational (edu)",                0,0,0 },
+{ IDX_3C('g','o','v'),    "US Government (gov)",              0,0,0 },
 { IDX_3C('i','n','t'),    "International (int)",              0,0,0 },
-{ IDX_3C('m','i','l'),    "US Military",                      0,0,0 },
-{ IDX_3C('n','e','t'),    "Network",                          0,0,0 },
-{ IDX_3C('o','r','g'),    "Non-Profit Organization",          0,0,0 },
+{ IDX_3C('m','i','l'),    "US Military (mil)",                0,0,0 },
+{ IDX_3C('n','e','t'),    "Network (net)",                    0,0,0 },
+{ IDX_3C('o','r','g'),    "Non-Profit Organization (org)",    0,0,0 },
+{ IDX_3C('p','r','o'),    "Professional firm (pro)",          0,0,0 },
 { IDX_4C('a','r','p','a'),"Old style Arpanet (arpa)",         0,0,0 },
+{ IDX_4C('i','n','f','o'),"Information (info)",               0,0,0 },
+{ IDX_4C('n','a','m','e'),"Family name (name)",               0,0,0 },
 { IDX_4C('n','a','t','o'),"Nato field (nato)",                0,0,0 },
+{ IDX_2C('a','1'),        "Anonymous Proxy",                  0,0,0 },
+{ IDX_2C('a','2'),        "Satellite Provider",               0,0,0 },
+{ IDX_2C('a','c'),        "Ascension Island",                 0,0,0 },
 { IDX_2C('a','d'),        "Andorra",                          0,0,0 },
 { IDX_2C('a','e'),        "United Arab Emirates",             0,0,0 },
 { IDX_2C('a','f'),        "Afghanistan",                      0,0,0 },
-{ IDX_2C('a','g'),        "Antigua and Barbuda",              0,0,0 },
+{ IDX_2C('a','g'),        "Antigua &amp; Barbuda",            0,0,0 },
 { IDX_2C('a','i'),        "Anguilla",                         0,0,0 },
 { IDX_2C('a','l'),        "Albania",                          0,0,0 },
 { IDX_2C('a','m'),        "Armenia",                          0,0,0 },
 { IDX_2C('a','n'),        "Netherlands Antilles",             0,0,0 },
 { IDX_2C('a','o'),        "Angola",                           0,0,0 },
+{ IDX_2C('a','p'),        "Asia/Pacific Region",              0,0,0 },
 { IDX_2C('a','q'),        "Antarctica",                       0,0,0 },
 { IDX_2C('a','r'),        "Argentina",                        0,0,0 },
 { IDX_2C('a','s'),        "American Samoa",                   0,0,0 },
@@ -350,7 +358,7 @@
 { IDX_2C('a','u'),        "Australia",                        0,0,0 },
 { IDX_2C('a','w'),        "Aruba",                            0,0,0 },
 { IDX_2C('a','z'),        "Azerbaijan",                       0,0,0 },
-{ IDX_2C('b','a'),        "Bosnia and Herzegovina",           0,0,0 },
+{ IDX_2C('b','a'),        "Bosnia &amp; Herzegovina",         0,0,0 },
 { IDX_2C('b','b'),        "Barbados",                         0,0,0 },
 { IDX_2C('b','d'),        "Bangladesh",                       0,0,0 },
 { IDX_2C('b','e'),        "Belgium",                          0,0,0 },
@@ -371,10 +379,11 @@
 { IDX_2C('b','z'),        "Belize",                           0,0,0 },
 { IDX_2C('c','a'),        "Canada",                           0,0,0 },
 { IDX_2C('c','c'),        "Cocos (Keeling) Islands",          0,0,0 },
+{ IDX_2C('c','d'), 	  "Congo, Democratic Rep. of the",    0,0,0 },
 { IDX_2C('c','f'),        "Central African Republic",         0,0,0 },
-{ IDX_2C('c','g'),        "Congo",                            0,0,0 },
+{ IDX_2C('c','g'), 	  "Congo, Republic of",		      0,0,0 },
 { IDX_2C('c','h'),        "Switzerland",                      0,0,0 },
-{ IDX_2C('c','i'),        "Cote D'Ivoire (Ivory Coast)",      0,0,0 },
+{ IDX_2C('c','i'),        "Cote D'Ivoire",		      0,0,0 },
 { IDX_2C('c','k'),        "Cook Islands",                     0,0,0 },
 { IDX_2C('c','l'),        "Chile",                            0,0,0 },
 { IDX_2C('c','m'),        "Cameroon",                         0,0,0 },
@@ -400,18 +409,20 @@
 { IDX_2C('e','r'),        "Eritrea",                          0,0,0 },
 { IDX_2C('e','s'),        "Spain",                            0,0,0 },
 { IDX_2C('e','t'),        "Ethiopia",                         0,0,0 },
+{ IDX_2C('e','u'),        "Europe Region",                    0,0,0 },
 { IDX_2C('f','i'),        "Finland",                          0,0,0 },
 { IDX_2C('f','j'),        "Fiji",                             0,0,0 },
 { IDX_2C('f','k'),        "Falkland Islands (Malvinas)",      0,0,0 },
-{ IDX_2C('f','m'),        "Micronesia",                       0,0,0 },
-{ IDX_2C('f','o'),        "Faroe Islands",                    0,0,0 },
-{ IDX_2C('f','r'),        "France",                           0,0,0 },
+{ IDX_2C('f','m'), 	  "Micronesia, Fed. State of",        0,0,0 },
+{ IDX_2C('f','o'), 	  "Faroe Islands",		      0,0,0 },
+{ IDX_2C('f','r'), 	  "France",			      0,0,0 },
 { IDX_2C('f','x'),        "France, Metropolitan",             0,0,0 },
 { IDX_2C('g','a'),        "Gabon",                            0,0,0 },
 { IDX_2C('g','b'),        "Great Britain (UK)",               0,0,0 },
 { IDX_2C('g','d'),        "Grenada",                          0,0,0 },
 { IDX_2C('g','e'),        "Georgia",                          0,0,0 },
 { IDX_2C('g','f'),        "French Guiana",                    0,0,0 },
+{ IDX_2C('g','g'), 	  "Guernsey",			      0,0,0 },
 { IDX_2C('g','h'),        "Ghana",                            0,0,0 },
 { IDX_2C('g','i'),        "Gibraltar",                        0,0,0 },
 { IDX_2C('g','l'),        "Greenland",                        0,0,0 },
@@ -420,13 +431,13 @@
 { IDX_2C('g','p'),        "Guadeloupe",                       0,0,0 },
 { IDX_2C('g','q'),        "Equatorial Guinea",                0,0,0 },
 { IDX_2C('g','r'),        "Greece",                           0,0,0 },
-{ IDX_2C('g','s'),        "S. Georgia and S. Sandwich Isls.", 0,0,0 },
+{ IDX_2C('g','s'),        "S.Georgia &amp; S.Sandwich Isls.", 0,0,0 },
 { IDX_2C('g','t'),        "Guatemala",                        0,0,0 },
 { IDX_2C('g','u'),        "Guam",                             0,0,0 },
 { IDX_2C('g','w'),        "Guinea-Bissau",                    0,0,0 },
 { IDX_2C('g','y'),        "Guyana",                           0,0,0 },
 { IDX_2C('h','k'),        "Hong Kong",                        0,0,0 },
-{ IDX_2C('h','m'),        "Heard and McDonald Islands",       0,0,0 },
+{ IDX_2C('h','m'),        "Heard &amp; McDonald Islands",     0,0,0 },
 { IDX_2C('h','n'),        "Honduras",                         0,0,0 },
 { IDX_2C('h','r'),        "Croatia (Hrvatska)",               0,0,0 },
 { IDX_2C('h','t'),        "Haiti",                            0,0,0 },
@@ -434,12 +445,14 @@
 { IDX_2C('i','d'),        "Indonesia",                        0,0,0 },
 { IDX_2C('i','e'),        "Ireland",                          0,0,0 },
 { IDX_2C('i','l'),        "Israel",                           0,0,0 },
+{ IDX_2C('i','m'), 	  "Isle of Man",		      0,0,0 },
 { IDX_2C('i','n'),        "India",                            0,0,0 },
-{ IDX_2C('i','o'),        "British Indian Ocean Territory",   0,0,0 },
+{ IDX_2C('i','o'),        "British Indian Ocean Terr.",	      0,0,0 },
 { IDX_2C('i','q'),        "Iraq",                             0,0,0 },
 { IDX_2C('i','r'),        "Iran",                             0,0,0 },
 { IDX_2C('i','s'),        "Iceland",                          0,0,0 },
 { IDX_2C('i','t'),        "Italy",                            0,0,0 },
+{ IDX_2C('j','e'), 	  "Jersey",			      0,0,0 },
 { IDX_2C('j','m'),        "Jamaica",                          0,0,0 },
 { IDX_2C('j','o'),        "Jordan",                           0,0,0 },
 { IDX_2C('j','p'),        "Japan",                            0,0,0 },
@@ -448,12 +461,13 @@
 { IDX_2C('k','h'),        "Cambodia",                         0,0,0 },
 { IDX_2C('k','i'),        "Kiribati",                         0,0,0 },
 { IDX_2C('k','m'),        "Comoros",                          0,0,0 },
-{ IDX_2C('k','n'),        "Saint Kitts and Nevis",            0,0,0 },
+{ IDX_2C('k','n'),        "Saint Kitts &amp; Nevis",          0,0,0 },
 { IDX_2C('k','p'),        "Korea (North)",                    0,0,0 },
 { IDX_2C('k','r'),        "Korea (South)",                    0,0,0 },
 { IDX_2C('k','w'),        "Kuwait",                           0,0,0 },
 { IDX_2C('k','y'),        "Cayman Islands",                   0,0,0 },
 { IDX_2C('k','z'),        "Kazakhstan",                       0,0,0 },
+{ IDX_2C('l','a'), 	  "Lao People's Dem. Rep.",	      0,0,0 },
 { IDX_2C('l','a'),        "Laos",                             0,0,0 },
 { IDX_2C('l','b'),        "Lebanon",                          0,0,0 },
 { IDX_2C('l','c'),        "Saint Lucia",                      0,0,0 },
@@ -464,18 +478,18 @@
 { IDX_2C('l','t'),        "Lithuania",                        0,0,0 },
 { IDX_2C('l','u'),        "Luxembourg",                       0,0,0 },
 { IDX_2C('l','v'),        "Latvia",                           0,0,0 },
-{ IDX_2C('l','y'),        "Libya",                            0,0,0 },
+{ IDX_2C('l','y'), 	  "Libyan Arab Jamahiriya",	      0,0,0 },
 { IDX_2C('m','a'),        "Morocco",                          0,0,0 },
 { IDX_2C('m','c'),        "Monaco",                           0,0,0 },
-{ IDX_2C('m','d'),        "Moldova",                          0,0,0 },
-{ IDX_2C('m','g'),        "Madagascar",                       0,0,0 },
-{ IDX_2C('m','h'),        "Marshall Islands",                 0,0,0 },
-{ IDX_2C('m','k'),        "Macedonia",                        0,0,0 },
-{ IDX_2C('m','l'),        "Mali",                             0,0,0 },
-{ IDX_2C('m','m'),        "Myanmar",                          0,0,0 },
-{ IDX_2C('m','n'),        "Mongolia",                         0,0,0 },
-{ IDX_2C('m','o'),        "Macau",                            0,0,0 },
-{ IDX_2C('m','p'),        "Northern Mariana Islands",         0,0,0 },
+{ IDX_2C('m','d'), 	  "Moldova, Republic of",	      0,0,0 },
+{ IDX_2C('m','g'), 	  "Madagascar",			      0,0,0 },
+{ IDX_2C('m','h'), 	  "Marshall Islands",		      0,0,0 },
+{ IDX_2C('m','k'), 	  "Macedonia, Republic of",	      0,0,0 },
+{ IDX_2C('m','l'), 	  "Mali",			      0,0,0 },
+{ IDX_2C('m','m'), 	  "Burma (Myanmar)",		      0,0,0 },
+{ IDX_2C('m','n'), 	  "Mongolia",			      0,0,0 },
+{ IDX_2C('m','o'), 	  "Macau",			      0,0,0 },
+{ IDX_2C('m','p'), 	  "Northern Mariana Islands",	      0,0,0 },
 { IDX_2C('m','q'),        "Martinique",                       0,0,0 },
 { IDX_2C('m','r'),        "Mauritania",                       0,0,0 },
 { IDX_2C('m','s'),        "Montserrat",                       0,0,0 },
@@ -498,7 +512,7 @@
 { IDX_2C('n','r'),        "Nauru",                            0,0,0 },
 { IDX_2C('n','t'),        "Neutral Zone",                     0,0,0 },
 { IDX_2C('n','u'),        "Niue",                             0,0,0 },
-{ IDX_2C('n','z'),        "New Zealand (Aotearoa)",           0,0,0 },
+{ IDX_2C('n','z'), 	  "New Zealand",		      0,0,0 },
 { IDX_2C('o','m'),        "Oman",                             0,0,0 },
 { IDX_2C('p','a'),        "Panama",                           0,0,0 },
 { IDX_2C('p','e'),        "Peru",                             0,0,0 },
@@ -507,74 +521,75 @@
 { IDX_2C('p','h'),        "Philippines",                      0,0,0 },
 { IDX_2C('p','k'),        "Pakistan",                         0,0,0 },
 { IDX_2C('p','l'),        "Poland",                           0,0,0 },
-{ IDX_2C('p','m'),        "St. Pierre and Miquelon",          0,0,0 },
-{ IDX_2C('p','n'),        "Pitcairn",                         0,0,0 },
-{ IDX_2C('p','r'),        "Puerto Rico",                      0,0,0 },
+{ IDX_2C('p','m'),        "St. Pierre &amp; Miquelon",        0,0,0 },
+{ IDX_2C('p','n'), 	  "Pitcairn Island",		      0,0,0 },
+{ IDX_2C('p','r'), 	  "Puerto Rico",		      0,0,0 },
+{ IDX_2C('p','s'), 	  "Palestinian Territories",	      0,0,0 },
 { IDX_2C('p','t'),        "Portugal",                         0,0,0 },
 { IDX_2C('p','w'),        "Palau",                            0,0,0 },
 { IDX_2C('p','y'),        "Paraguay",                         0,0,0 },
 { IDX_2C('q','a'),        "Qatar",                            0,0,0 },
-{ IDX_2C('r','e'),        "Reunion",                          0,0,0 },
-{ IDX_2C('r','o'),        "Romania",                          0,0,0 },
-{ IDX_2C('r','u'),        "Russian Federation",               0,0,0 },
-{ IDX_2C('r','w'),        "Rwanda",                           0,0,0 },
+{ IDX_2C('r','e'), 	  "Reunion Island",		      0,0,0 },
+{ IDX_2C('r','o'), 	  "Romania",			      0,0,0 },
+{ IDX_2C('r','u'), 	  "Russian Federation",		      0,0,0 },
+{ IDX_2C('r','w'), 	  "Rwanda",			      0,0,0 },
 { IDX_2C('s','a'),        "Saudi Arabia",                     0,0,0 },
-{ IDX_2C('s','B'),        "Solomon Islands",                  0,0,0 },
+{ IDX_2C('s','b'),        "Solomon Islands",                  0,0,0 },
 { IDX_2C('s','c'),        "Seychelles",                       0,0,0 },
 { IDX_2C('s','d'),        "Sudan",                            0,0,0 },
 { IDX_2C('s','e'),        "Sweden",                           0,0,0 },
 { IDX_2C('s','g'),        "Singapore",                        0,0,0 },
 { IDX_2C('s','h'),        "St. Helena",                       0,0,0 },
 { IDX_2C('s','i'),        "Slovenia",                         0,0,0 },
-{ IDX_2C('s','j'),        "Svalbard and Jan Mayen Islands",   0,0,0 },
+{ IDX_2C('s','j'),        "Svalbard &amp; Jan Mayen Isls.",   0,0,0 },
 { IDX_2C('s','k'),        "Slovak Republic",                  0,0,0 },
 { IDX_2C('s','l'),        "Sierra Leone",                     0,0,0 },
 { IDX_2C('s','m'),        "San Marino",                       0,0,0 },
 { IDX_2C('s','n'),        "Senegal",                          0,0,0 },
 { IDX_2C('s','o'),        "Somalia",                          0,0,0 },
 { IDX_2C('s','r'),        "Suriname",                         0,0,0 },
-{ IDX_2C('s','t'),        "Sao Tome and Principe",            0,0,0 },
+{ IDX_2C('s','t'),        "Sao Tome &amp; Principe",          0,0,0 },
 { IDX_2C('s','u'),        "USSR (former)",                    0,0,0 },
 { IDX_2C('s','v'),        "El Salvador",                      0,0,0 },
-{ IDX_2C('s','y'),        "Syria",                            0,0,0 },
+{ IDX_2C('s','y'), 	  "Syrian Arab Republic",	      0,0,0 },
 { IDX_2C('s','z'),        "Swaziland",                        0,0,0 },
-{ IDX_2C('t','c'),        "Turks and Caicos Islands",         0,0,0 },
-{ IDX_2C('t','d'),        "Chad",                             0,0,0 },
-{ IDX_2C('t','f'),        "French Southern Territories",      0,0,0 },
-{ IDX_2C('t','g'),        "Togo",                             0,0,0 },
-{ IDX_2C('t','h'),        "Thailand",                         0,0,0 },
-{ IDX_2C('t','j'),        "Tajikistan",                       0,0,0 },
-{ IDX_2C('t','k'),        "Tokelau",                          0,0,0 },
-{ IDX_2C('t','m'),        "Turkmenistan",                     0,0,0 },
-{ IDX_2C('t','n'),        "Tunisia",                          0,0,0 },
-{ IDX_2C('t','o'),        "Tonga",                            0,0,0 },
-{ IDX_2C('t','p'),        "East Timor",                       0,0,0 },
-{ IDX_2C('t','r'),        "Turkey",                           0,0,0 },
-{ IDX_2C('t','t'),        "Trinidad and Tobago",              0,0,0 },
-{ IDX_2C('t','v'),        "Tuvalu",                           0,0,0 },
-{ IDX_2C('t','w'),        "Taiwan",                           0,0,0 },
-{ IDX_2C('t','z'),        "Tanzania",                         0,0,0 },
-{ IDX_2C('u','a'),        "Ukraine",                          0,0,0 },
-{ IDX_2C('u','g'),        "Uganda",                           0,0,0 },
-{ IDX_2C('u','k'),        "United Kingdom",                   0,0,0 },
-{ IDX_2C('u','m'),        "US Minor Outlying Islands",        0,0,0 },
-{ IDX_2C('u','s'),        "United States",                    0,0,0 },
-{ IDX_2C('u','y'),        "Uruguay",                          0,0,0 },
-{ IDX_2C('u','z'),        "Uzbekistan",                       0,0,0 },
-{ IDX_2C('v','a'),        "Vatican City State (Holy See)",    0,0,0 },
-{ IDX_2C('v','c'),        "Saint Vincent and the Grenadines", 0,0,0 },
+{ IDX_2C('t','c'), 	  "Turks &amp; Caicos Islands",	      0,0,0 },
+{ IDX_2C('t','d'), 	  "Chad",			      0,0,0 },
+{ IDX_2C('t','f'), 	  "French Southern Territories",      0,0,0 },
+{ IDX_2C('t','g'), 	  "Togo",			      0,0,0 },
+{ IDX_2C('t','h'), 	  "Thailand",			      0,0,0 },
+{ IDX_2C('t','j'), 	  "Tajikistan",			      0,0,0 },
+{ IDX_2C('t','k'), 	  "Tokelau",			      0,0,0 },
+{ IDX_2C('t','m'), 	  "Turkmenistan",		      0,0,0 },
+{ IDX_2C('t','n'), 	  "Tunisia",			      0,0,0 },
+{ IDX_2C('t','o'), 	  "Tonga",			      0,0,0 },
+{ IDX_2C('t','p'), 	  "East Timor",			      0,0,0 },
+{ IDX_2C('t','r'), 	  "Turkey",			      0,0,0 },
+{ IDX_2C('t','t'), 	  "Trinidad &amp; Tobago",	      0,0,0 },
+{ IDX_2C('t','v'), 	  "Tuvalu",			      0,0,0 },
+{ IDX_2C('t','w'), 	  "Taiwan",			      0,0,0 },
+{ IDX_2C('t','z'), 	  "Tanzania",			      0,0,0 },
+{ IDX_2C('u','a'), 	  "Ukraine",			      0,0,0 },
+{ IDX_2C('u','g'), 	  "Uganda",			      0,0,0 },
+{ IDX_2C('u','k'), 	  "United Kingdom",		      0,0,0 },
+{ IDX_2C('u','m'), 	  "US Minor Outlying Islands",	      0,0,0 },
+{ IDX_2C('u','s'), 	  "United States",		      0,0,0 },
+{ IDX_2C('u','y'), 	  "Uruguay",			      0,0,0 },
+{ IDX_2C('u','z'), 	  "Uzbekistan",			      0,0,0 },
+{ IDX_2C('v','a'),        "Holy See (Vatican City)",	      0,0,0 },
+{ IDX_2C('v','c'),        "Saint Vincent &amp; the Grenadines", 0,0,0 },
 { IDX_2C('v','e'),        "Venezuela",                        0,0,0 },
-{ IDX_2C('v','g'),        "Virgin Islands (British)",         0,0,0 },
-{ IDX_2C('v','i'),        "Virgin Islands (U.S.)",            0,0,0 },
-{ IDX_2C('v','n'),        "Viet Nam",                         0,0,0 },
+{ IDX_2C('v','g'),        "Virgin Islands (UK)",              0,0,0 },
+{ IDX_2C('v','i'), 	  "Virgin Islands (US)",	      0,0,0 },
+{ IDX_2C('v','n'), 	  "Vietnam",			      0,0,0 },
 { IDX_2C('v','u'),        "Vanuatu",                          0,0,0 },
-{ IDX_2C('w','f'),        "Wallis and Futuna Islands",        0,0,0 },
+{ IDX_2C('w','f'),        "Wallis &amp; Futuna Islands",      0,0,0 },
 { IDX_2C('w','s'),        "Samoa",                            0,0,0 },
-{ IDX_2C('y','e'),        "Yemen",                            0,0,0 },
-{ IDX_2C('y','t'),        "Mayotte",                          0,0,0 },
-{ IDX_2C('y','u'),        "Yugoslavia",                       0,0,0 },
-{ IDX_2C('z','a'),        "South Africa",                     0,0,0 },
-{ IDX_2C('z','m'),        "Zambia",                           0,0,0 },
+{ IDX_2C('y','e'), 	  "Yemen",			      0,0,0 },
+{ IDX_2C('y','t'), 	  "Mayotte",			      0,0,0 },
+{ IDX_2C('y','u'), 	  "Yugoslavia",			      0,0,0 },
+{ IDX_2C('z','a'), 	  "South Africa",		      0,0,0 },
+{ IDX_2C('z','m'), 	  "Zambia",			      0,0,0 },
 { IDX_2C('z','r'),        "Zaire",                            0,0,0 },
-{ IDX_2C('z','w'),        "Zimbabwe",                         0,0,0 },
+{ IDX_2C('z','w'), 	  "Zimbabwe",			      0,0,0 },
 { 0              ,        NULL,                               0,0,0 }};
Index: webalizer-2.01.10-vc/output.c
===================================================================
--- webalizer-2.01.10-vc.orig/output.c	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/output.c	2006-10-27 12:34:31.000000000 +0400
@@ -1375,11 +1375,19 @@
          }
          else
          {
-            if (rptr->string[0] != '-')
-            fprintf(out_fp,"<A HREF=\"%s\">%s</A>",
-                rptr->string, rptr->string);
-            else
-            fprintf(out_fp,"%s", rptr->string);
+	    /* do not print as anchor tags to avoid referrer spamming */
+	    /* skip over any initial protocol:// */
+	    char *p = rptr->string;
+	    while (*p && isalpha(*p)) {
+	    	++p;
+	    }
+	    if (*p && strncmp(p, "://", 3) == 0) {
+		fprintf(out_fp,"%s", p+3);
+	    } else if (*p && strncmp(p, ":/", 2) == 0) {
+		fprintf(out_fp,"%s", p+1);
+	    } else {
+		fprintf(out_fp,"%s", rptr->string);
+	    }
          }
          fprintf(out_fp,"</FONT></TD></TR>\n");
          tot_num--;
Index: webalizer-2.01.10-vc/webalizer.c
===================================================================
--- webalizer-2.01.10-vc.orig/webalizer.c	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/webalizer.c	2006-10-27 12:34:31.000000000 +0400
@@ -588,7 +588,7 @@
          if (rec_hour>23) rec_hour=0;

          /* minimal sanity check on date */
-         if ((i>=12)||(rec_min>59)||(rec_sec>59)||(rec_year<1990))
+         if ((i>=12)||(rec_min>59)||(rec_sec>60)||(rec_year<1990))
          {
             total_bad++;                /* if a bad date, bump counter      */
             if (verbose)
Index: webalizer-2.01.10-vc/webalizer.h
===================================================================
--- webalizer-2.01.10-vc.orig/webalizer.h	2006-10-27 12:34:21.000000000 +0400
+++ webalizer-2.01.10-vc/webalizer.h	2006-10-27 12:34:31.000000000 +0400
@@ -13,14 +13,14 @@
 #define MAXHASH  2048                  /* Size of our hash tables          */
 #define BUFSIZE  4096                  /* Max buffer size for log record   */
 #define MAXHOST  128                   /* Max hostname buffer size         */
-#define MAXURL   1024                  /* Max HTTP request/URL field size  */
-#define MAXURLH  128                   /* Max URL field size in htab       */
+#define MAXURL   4096                  /* Max HTTP request/URL field size  */
+#define MAXURLH  256                   /* Max URL field size in htab       */
 #define MAXREF   1024                  /* Max referrer field size          */
-#define MAXREFH  128                   /* Max referrer field size in htab  */
-#define MAXAGENT 64                    /* Max user agent field size        */
+#define MAXREFH  256                   /* Max referrer field size in htab  */
+#define MAXAGENT 128                   /* Max user agent field size        */
 #define MAXCTRY  48                    /* Max country name size            */
 #define MAXSRCH  256                   /* Max size of search string buffer */
-#define MAXSRCHH 64                    /* Max size of search str in htab   */
+#define MAXSRCHH 256                   /* Max size of search str in htab   */
 #define MAXIDENT 64                    /* Max size of ident string (user)  */

 #define SLOP_VAL 3600                  /* out of sequence slop (seconds)   */
