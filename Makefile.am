# Makefile for webalizer - a web server log analysis program
# Copyright (C) 1997-2013  Bradford L. Barrett

EXTRA_DIST =
ACLOCAL_AMFLAGS = -Wall -I tools/m4 --install
DISTCHECK_CONFIGURE_FLAGS = --disable-dependency-tracking

LANGS := $(shell for a in po/*.po; do basename $${a%.po}; done)
CLEANFILES :=

SRC :=	webalizer.c webalizer.h hashtab.c hashtab.h \
	linklist.c linklist.h preserve.c preserve.h \
	dns_resolv.c dns_resolv.h parser.c parser.h \
	output.c output.h graphs.c graphs.h gdfontg.c \
	gdfontl.c gdfontmb.c gdfonts.c gdfontt.c \
	lang.h lang2.h xcode.c xcode.h

AM_CPPFLAGS = -DPACKAGE=\"$(PACKAGE)\" -DETCDIR=\"$(etcdir)\" -DPKGLOCALEDIR=\"$(pkglocaledir)\"
AM_CPPFLAGS += $(OPTS)

cc_opt_wl_bstatic := -Wl,-Bstatic
cc_opt_wl_bdynamic := -Wl,-Bdynamic

LINK_STATIC = $(if $(enable_static:no=), $(cc_opt_wl_bstatic))
LINK_SHARED = $(if $(enable_static:no=), $(cc_opt_wl_bdynamic))

CFLAGS_OPT = $(if $(enable_debug:no=),			\
	-ftrapv -DDEBUG -O0 -g,				\
	-DNDEBUG -flto=auto -fno-fat-lto-objects)

AM_CFLAGS = $(CFLAGS_SYS) -Wall -Wextra $(CFLAGS_OPT)


bin_PROGRAMS = webalizer wcmgr
man1_MANS = webalizer.1 wcmgr.1

# .c.o:; COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o $@ $<
# webalizer$(EXEEXT): $(webalizer_OBJECTS) $(webalizer_DEPENDENCIES) $(EXTRA_webalizer_DEPENDENCIES)
# $(AM_V_CCLD)$(webalizer_LINK)[ = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(webalizer_LDFLAGS) $(LDFLAGS) -o $@] $(webalizer_OBJECTS) $(webalizer_LDADD) $(LIBS)

webalizer_SOURCES = $(SRC) $(LANGS:%=po/%.po) webalizer.1 sample.conf
webalizer_LDFLAGS = $(EXE_LDFLAGS)
webalizer_LDADD = $(LINK_STATIC) $(LIBS_GD) $(LINK_SHARED) $(LIBS_WEBALIZER) $(LDADD)
webalizer_DEPENDENCIES = $(LANGS:%=po/%.mo)
nodist_webalizer_SOURCES = version.c
CLEANFILES += $(nodist_webalizer_SOURCES)

wcmgr_SOURCES = wcmgr.c webalizer.h wcmgr.1
wcmgr_LDADD = $(LIBS_WCMGR) $(LDADD)

AM_V_MSGFMT = $(am__v_MSGFMT_$(V))
am__v_MSGFMT_ = $(am__v_MSGFMT_$(AM_DEFAULT_VERBOSITY))
am__v_MSGFMT_0 = @echo "  MSGFMT  " $@;
am__v_MSGFMT_1 =

$(LANGS:%=po/%.mo): %.mo: %.po
	$(AM_V_MSGFMT)msgfmt $< -o $@

dist-hook: configure
	cp -p $(top_srcdir)/configure $(distdir)/

install-data-hook: $(LANGS:%=po/%.mo)
	@rm -f $(DESTDIR)$(bindir)/webazolver
	@$(LN_S) webalizer $(DESTDIR)$(bindir)/webazolver
	@rm -f $(DESTDIR)$(man1dir)/webazolver.1
	@$(LN_S) webalizer.1 $(DESTDIR)$(man1dir)/webazolver.1
	@$(MKDIR_P) $(LANGS:%=$(DESTDIR)$(pkglocaledir)/%/LC_MESSAGES)
	@for a in $(LANGS); do $(INSTALL_DATA) po/$$a.mo $(DESTDIR)$(pkglocaledir)/$$a/LC_MESSAGES/webalizer.mo; done
	@$(MKDIR_P) $(DESTDIR)$(etcdir)
	$(INSTALL_DATA) sample.conf $(DESTDIR)$(etcdir)/webalizer.conf.sample

sqs := '#'- variable containing single quote
sqd := "#"- variable containing double quote
sq = $(strip $(subst $(sqs),'\'',$(subst $(sqd),\",$(subst \,\\,$(subst $(abs_top_builddir),[cwd],$($(strip $(1))))))))

# Create version file
version.c.tmp: Makefile
	@LOCALV=`git describe --dirty || echo unknown`; LOCALV="$${LOCALV#*[_-]}";    \
	FULL_VERSION="$$LOCALV$(EXTRA_VER)"; UNAME=`uname -a`;                        \
	BUILD_DATE=`date '+%Y-%m-%d'`; BUILT_BY="$$USER@$${HOSTNAME:-`hostname`}";    \
	printf '%s\n' '  [*] Checking version: '$$FULL_VERSION', '$$BUILD_DATE'';     \
	printf '%s\n' '/* generated by $(MAKE) at '$$BUILD_DATE' */'             >$@; \
	printf '%s\n' '#define VER(k, v) const char k##_[] = #k, k[] = v;'      >>$@; \
	printf '%s\n' 'VER(FULL_VERSION,      "'"$$FULL_VERSION"'")'            >>$@; \
	printf '%s\n' 'VER(BUILT_UNAME,       "'"$$UNAME"'")'                   >>$@; \
	printf '%s\n' 'VER(BUILD_DATE,        "'"$$BUILD_DATE"'")'              >>$@; \
	printf '%s\n' 'VER(BUILT_BY,          "'"$$BUILT_BY"'")'                >>$@; \
	printf '%s\n' 'VER(BUILT_AT,          "$(call sq, build_triplet)")'     >>$@; \
	printf '%s\n' 'VER(BUILT_FOR,         "$(call sq, host_triplet)")'      >>$@; \
	printf '%s\n' 'VER(enable_debug,      "$(call sq, enable_debug)")'      >>$@; \
	printf '%s\n' 'VER(CONFIGURE_CMD,     "$(call sq, CONFIGURE_CMD)")'     >>$@; \
	printf '%s\n' 'VER(DEFS,              "$(call sq, DEFS)")'              >>$@; \
	printf '%s\n' 'VER(DEFAULT_INCLUDES,  "$(call sq, DEFAULT_INCLUDES)")'  >>$@; \
	printf '%s\n' 'VER(INCLUDES,          "$(call sq, INCLUDES)")'          >>$@; \
	printf '%s\n' 'VER(AM_CPPFLAGS,       "$(call sq, AM_CPPFLAGS)")'       >>$@; \
	printf '%s\n' 'VER(CPPFLAGS,          "$(call sq, CPPFLAGS)")'          >>$@; \
	printf '%s\n' 'VER(AM_CFLAGS,         "$(call sq, AM_CFLAGS)")'         >>$@; \
	printf '%s\n' 'VER(CFLAGS,            "$(call sq, CFLAGS)")'            >>$@; \
	printf '%s\n' 'VER(webalizer_LDFLAGS, "$(call sq, webalizer_LDFLAGS)")' >>$@; \
	printf '%s\n' 'VER(LDFLAGS,           "$(call sq, LDFLAGS)")'           >>$@; \
	printf '%s\n' 'VER(webalizer_LDADD,   "$(call sq, webalizer_LDADD)")'   >>$@; \
	printf '%s\n' 'VER(LIBS,              "$(call sq, LIBS)")'              >>$@; \
	printf '%s\n' 'VER(LIBS_WEBALIZER,    "$(call sq, LIBS_WEBALIZER)")'    >>$@; \
	printf '%s\n' 'VER(LIBS_GD,           "$(call sq, LIBS_GD)")'           >>$@; \
	printf '%s\n' '/* end */'                                               >>$@

version.c: version.c.tmp
	@cmp -s $@.tmp $@ && \
	(echo '  [-] Unchanged $@' && rm -f $@.tmp) || \
	(echo '  [+] Updated $@' && mv $@.tmp $@ )
