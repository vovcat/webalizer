Installation instructions for The Webalizer

The Webalizer is distributed in either source or binary distributions,
and installation is different for each type.  Regardless of the type
of distribution, you need to create a directory somewhere, and place
the file there (/usr/src/webalizer/ is good...).  Untar/uncompress the
distribution file in this directory.


For Binary distributions
------------------------

You should have all the files you need in the directory you used
above.  The file 'webalizer' is the binary executable.  Copy this
someplace useful, like /usr/local/bin or /usr/bin.  A man page for
The Webalizer is also supplied... If desired, copy the file
'webalizer.1' to your local man directory (ie: /usr/local/man/man1).


For Source distributions
------------------------

The Webalizer requires the GD graphics library by Tom Boutell.  If
you don't already have it, go to http://www.boutell.com/gd/ and
grab a copy.  The header files for the library are expected to be
in /usr/local/include/gd and the actual library should be in your
library path (ie: /usr/local/lib or /usr/lib).  The GNU C compiler
(gcc) is also the default compiler to use.  If any of these are
different on your machine, edit the Makefile to match your
operating environment.

Type 'make' to compile the program.

Once complete, you have a binary executable named 'webalizer'.
Test it by typing 'webalizer -v' to print the version,  then
copy it someplace useful, such as /usr/local/bin or /usr/bin.
A man page is also supplied with all distributions.  If desired,
copy the file 'webalizer.1' to your local man directory.


Usage
-----

When run, The Webalizer will read the specified log file and
produce HTML output in the directory specified (or current
directory if none).  You may specify various configuration
options either on the command line or in a configuration file.
The format of the command line is:

webalizer [options] [log_file]

Where 'options' may be any of the valid command line options
described in the README file.  If a log filename is not given,
input is taken from stdin.  A typical command line might look
something similar to:

webalizer /var/lib/httpd/logs/access_log

This will produce output in the current directory based on the
logfile /var/lib/httpd/logs/access_log.  Another example:

webalizer -c somehost.conf

This will read the configuration file somehost.conf, which
should specify, among other things, the log filename and
output directory to use.  You can use 'webalizer -h' to get
a list of available command line options, or view the file
README for complete instructions on all available configuration
options.  You should note that The Webalizer will _always_
look for a configuration file named 'webalizer.conf' in either
the current directory or in /etc/, and will process that file
_before_ any other configuration or command line options.  If
you run a single server, you may want to create a default
configuration file and place it in the /etc/ directory.  This
will allow you to simply type 'webalizer' without the need to
specify additional command line options.


Configuration
-------------

The Webalizer can be customized in many ways using either the
command line or configuration files.  To test The Webalizer,
type: 'webalizer /var/lib/httpd/logs/access_log', changing the
directory to wherever your log files are.  After processing,
you should have the output and a file named index.html which
can be viewed with any browser.  The Webalizer can accept many
command line options as well, type 'webalizer -h' to view them.
In addition to the command line options, The Webalizer can
be customized using configuration files. There is a sample.conf
file that is part of both the source and binary distributions
that can be used as a 'template' for creating your own site
configuration file.  Just make a copy of the file and name it
something like 'mysite.conf'.  Edit the new file to match your
particular setup and taste.

To test the new configuration file, type 'webalizer -c mysite.conf'
(or whatever your configuration file is named).  Fire up the
browser and look at the results.  If you rename your new
configuration file to 'webalizer.conf', you will only need
to type 'webalizer', and The Webalizer will use it as the
default.  See the README file for more on configuation and
use of configuation files.


Language Support
----------------

Version 1.00 of The Webalizer added language support in the
form of a language specific header file included at compile
time.  Grab a copy of the latest source distribution and
Untar/uncompress it somewhere safe (such as /usr/src/webalizer).
In the directory, you will find a symbolic link for the
file webalizer_lang.h, and it will be pointing to the file
webalizer_lang.english which is the default.  Delete the
link (ie: rm webalizer_lang.h) and create a new one to the
language file you want The Webalizer to use
(ie: ln -s webalizer_lang.spanish webalizer_lang.h)
and re-compile the program.

Note: The source distribution of The Webalizer contains all
      language support files that were available at the time.
      Additional/updated language files can be found at:
      ftp://ftp.mrunix.net/pub/webalizer/lang where I will put
      them as I receive them.


Common Questions
----------------

Q: Will it run on [some platform]
A: If it is a *nix platform, it should without a problem.  If it's
   something different, probably not and your on your own if you
   want to try to make it work.

Q: When I compile, I get "file not found" errors?
A: Most likely, the compiler cant find the header files for the
   GD Graphics library.  If they are someplace other than the
   default /usr/local/include/gd, then you need to change the
   GDLIB variable in the Makefile to point to the proper place.

Q: I get "libgd not found' errors?
A: You don't have the GD graphics located in a standard library
   path, or you don't have the GD graphics library at all.  If
   the later, go to http://www.boutell.com/gd/ and grab a copy.
   If you do have it, add a -L switch in the Makefile to point
   to the proper location.

Q: I can't get the GD graphics library to compile?
A: The GD Library was written (and hopefully maintained) by
   Tom Boutell, not me.  Visit his web site, ask him a
   question or hit one of the newsgroups...  I can't help you
   out too much with this one.
